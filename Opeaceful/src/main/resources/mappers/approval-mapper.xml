<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- (승은) -->
<mapper namespace="aprMapper">

	
<!-- 
	MyBatis foreach문 지원 태그
	collection : 전달받은 인자. List or Array 형태만 가능
	item : 전달받은 인자 값을 alias 명으로 대체
	open : 구문이 시작될때 삽입할 문자열
	close : 구문이 종료될때 삽입할 문자열
	separator : 반복 되는 사이에 출력할 문자열
	index : 반복되는 구문 번호이다. 0부터 순차적으로 증가
	
	insert 시 자동증가값 받아오는법
	-> useGeneratedKeys="true"로 설정해서, 자동 생성된 키 값들을 가져올 거라는 것을 명시한 다음에, 
		keyProperty로, 어떤 필드 값으로 받을지를 명시하면 됨
		테이블의 어느 속성들을 받을 것인지 따로 정할 수도 있는데 keyColumn으로 설정하면 된다
 -->

<!-- ==============================  select 구간 ================================ -->

	<select id="selectFormListCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM APPROVAL_FORM
		<choose>
			<when test='type == 0'><!-- 일반 -->
				WHERE TYPE = 0
			</when>
			<when test='type == 1'><!-- 연차 -->
				WHERE TYPE = 1
			</when>
			<when test='type == 2'><!-- 오전반차 -->
				WHERE TYPE = 2
			</when>
			<when test='type == 3'><!-- 오후반차 -->
				WHERE TYPE = 3
			</when>
		</choose>
		ORDER BY FORM_NO DESC
	</select>	
	
	<!-- 폼 리스트 전체 조회 -->
	<select id="selectFormListAll" resultType="approvalForm">
		SELECT FORM_NO, TYPE, TITLE
		FROM APPROVAL_FORM
		ORDER BY FORM_NO DESC
	</select>

	<!-- 폼 리스트 조회 -->
	<select id="selectFormList" parameterType="_int" resultType="approvalForm">
		SELECT FORM_NO, TYPE, TITLE
		FROM APPROVAL_FORM
		<choose>
			<when test='type == 0'><!-- 일반 -->
				WHERE TYPE = 0
			</when>
			<when test='type == 1'><!-- 연차 -->
				WHERE TYPE = 1
			</when>
			<when test='type == 2'><!-- 오전반차 -->
				WHERE TYPE = 2
			</when>
			<when test='type == 3'><!-- 오후반차 -->
				WHERE TYPE = 3
			</when>
		</choose>
		ORDER BY FORM_NO DESC
	</select>

	<!-- 개별 폼 조회 -->
	<select id="selectForm" parameterType="_int" resultType="approvalForm">
		SELECT *
		FROM APPROVAL_FORM
		WHERE FORM_NO = #{formNo}
	</select>
	
	<!-- 저장된 파일리스트 조회(본문용, 첨부용선택) -->
	<select id="selectFileList" resultType="approvalFile" parameterType="map">
		SELECT * 
		FROM APPROVAL_FILE
		WHERE REF_TYPE  
			<choose>
				<when test='refType.equals("form")'>
					= 'form'
				</when>
				<when test='refType.equals("approval")'>
					= 'approval'
				</when>
				<when test='refType.equals("memo")'>
					= 'memo'
				</when>
				<when test='refType.equals("approval-memo")'>
					IN( 'approval', 'memo' )
				</when>
			</choose>
			AND REF_NO = #{refNo}
			<choose>
				<when test='usage.equals("content")'>
					AND ORIGIN_NAME IS NULL
				</when>
				<when test='usage.equals("attachment")'>
					AND ORIGIN_NAME IS NOT NULL
				</when>
			</choose>
	</select>
		
	<!-- [지의] 해당 유저 연차 조회 -->
	<select id="selectUserApproval" resultType="approval" parameterType="_int">
		SELECT USER_NO,
			   TYPE,
			   START_DATE,
			   END_DATE,
			   CASE
					WHEN TYPE = 1 THEN (END_DATE - START_DATE) + 1
					WHEN TYPE = 2 THEN 0.5
					WHEN TYPE = 3 THEN 0.5
			   END AS APPROVAL_COUNT
		 FROM approval
		WHERE USER_NO = #{userNo}
		  AND STATUS = 1
		  AND DATE_FORMAT(START_DATE,'%Y') = (DATE_FORMAT(now(),'%Y'))
		ORDER BY START_DATE DESC;
	</select>

	<!-- 즐겨찾기 조회 -->
	<select id="selectFavorList" parameterType="_int" resultType="approvalFavor">
		SELECT *
		FROM APPROVAL_FAVORITE_LINE
		WHERE USER_NO = #{ userNo }
	</select>
	
	<!-- 즐겨찾기/결재문서 결재라인 조회 -->
	<select id="selectLineList" parameterType="map" resultType="approvalLine">
		SELECT A.*, USER_NAME, P_NAME
		FROM 
		<choose>
			<when test='type.equals("favor")'>
				APPROVAL_ACTUAL_FAVORITE_LINE A
			</when>	
			<otherwise>
				APPROVAL_LINE
			</otherwise>
		</choose>
		LEFT JOIN MEMBER M USING (USER_NO)
		LEFT JOIN USER_DEPARTMENT U USING (USER_NO)
		LEFT JOIN POSITION P USING (P_CODE)
		<choose>
			<when test='type.equals("favor")'>
				WHERE LINE_NO = #{no}
			</when>	
			<otherwise>
				WHERE APPROVAL_NO = #{no}
			</otherwise>
		</choose>
		ORDER BY LEVEL
	</select>

<!-- =============================== insert 구간  =========================================== -->
	
	<!-- 폼 등록 / 등록하면서 formNo반환 -->
	<insert id="insertForm" useGeneratedKeys="true"  keyProperty="formNo" parameterType="approvalForm">
		INSERT INTO APPROVAL_FORM( TYPE, TITLE, CONTENT )
		VALUES( #{type}, #{title}, #{content} )
	</insert>
	
	<!-- 파일 등록 -->
	<insert id="insertFile" parameterType="map">
		INSERT INTO APPROVAL_FILE(FILE_NO, REF_TYPE, REF_NO, CHANGE_NAME, ORIGIN_NAME)
		SELECT FILE.*
		FROM (
			<foreach collection="fileList" item="file" separator="UNION ALL">
				SELECT
					#{file.fileNo} AS FILE_NO ,
					#{refType} AS REF_TYPE ,
					#{refNo} AS REF_NO ,
					#{file.changeName} AS CHANGE_NAME ,
					#{file.originName} AS ORIGIN_NAME
				FROM DUAL
			</foreach>
			) FILE
	</insert>
	
	<!-- 결재문서 등록 / 등록하면서 approvalNo반환 -->
	<insert id="insertApproval" useGeneratedKeys="true"  keyProperty="approvalNo" parameterType="approval">
		INSERT INTO APPROVAL( USER_NO, TYPE, TITLE, CONTENT, 
								DRAFT_DATE, STATUS, START_DATE, END_DATE )
		VALUES( #{userNo}, #{type}, #{title}, #{content},
					NOW(), #{status}, #{startDate}, #{endDate} )
	</insert>
	
	
	<!-- 결재문서의 결재라인 등록  -->
	<insert id="insertApprovalLine" parameterType="map">
		INSERT INTO APPROVAL_LINE(LEVEL, APPROVAL_NO, USER_NO, TYPE, STATUS, CONFIRM_STATUS )
		SELECT LINE.*
		FROM (
			<foreach collection="lines" item="line" separator="UNION ALL">
				SELECT
					#{line.level} AS LEVEL ,
					#{approvalNo} AS APPROVAL_NO ,
					#{line.userNo} AS USER_NO ,
					#{line.type} AS TYPE ,
					#{line.status} AS STATUS ,
					'N' AS CONFIRM_STATUS
				FROM DUAL
			</foreach>
			) LINE
	</insert>
	
	
	<!-- 즐겨찾기 등록 -->
	<insert id="insertFavor" parameterType="approvalFavor" useGeneratedKeys="true" keyProperty="lineNo">
		INSERT INTO APPROVAL_FAVORITE_LINE(USER_NO, TITLE)
		VALUES( #{userNo} , #{title} )
	</insert>
	
	<!-- 즐겨찾기용 실제 결재라인 등록  -->
	<insert id="insertFavorActualLine" parameterType="map">
		INSERT INTO APPROVAL_ACTUAL_FAVORITE_LINE(LEVEL, LINE_NO, USER_NO, TYPE)
		SELECT LINE.*
		FROM (
			<foreach collection="lines" item="line" separator="UNION ALL">
				SELECT
					#{line.level} AS LEVEL ,
					#{favorNo} AS LINE_NO ,
					#{line.userNo} AS USER_NO ,
					#{line.type} AS TYPE 
				FROM DUAL
			</foreach>
			) LINE
	</insert>
	

	
	
<!-- ============================== update 구간 ============================== -->
	
	<!-- 폼 내용 수정 -->
	<update id="updateForm" parameterType="approvalForm">
		UPDATE APPROVAL_FORM
		SET TYPE = #{type} ,
			TITLE = #{title} ,
			CONTENT = #{content}
		WHERE FORM_NO  = #{formNo}
	</update>
	
	<!-- 결재문서 내용 수정 -->
	<update id="updateApproval" parameterType="approval">
		UPDATE APPROVAL
		SET 
			TITLE = #{title} ,
			CONTENT = #{content},
			
		WHERE FORM_NO  = #{formNo}
	</update>
	
<!-- ============================ delete 구간 ============================ -->
	
	<!-- 폼 삭제 -->
	<delete id="deleteForm" parameterType="_int">
		DELETE FROM  APPROVAL_FORM
		WHERE FORM_NO = #{formNo}
	</delete>
	
	
	<!-- 결재라인 삭제 -->
	<delete id="deleteApprovalLine" parameterType="_int">
		DELETE FROM  APPROVAL_LINE
		WHERE APPROVAL_NO = #{approvalNo}
	</delete>
	
	<!-- 파일들 삭제 -->
	<delete id="deleteFileList" parameterType="list">
		DELETE FROM  APPROVAL_FILE
		WHERE FILE_NO IN ( <foreach collection="list" item="file" separator=",">
								#{file.fileNo}
							</foreach> )
	</delete>
	
	
	<!-- 즐겨찾기 삭제 -->
	<delete id="deleteFavor" parameterType="_int">
		DELETE FROM  APPROVAL_FAVORITE_LINE
		WHERE LINE_NO = #{favorNo}
	</delete>

	
	
</mapper>
