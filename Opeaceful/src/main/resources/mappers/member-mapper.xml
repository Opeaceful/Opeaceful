<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

 <resultMap type="member" id="AllmemberResultSet">
  	<id column="USER_NO" property="userNo"/>
  	<result column="ENO" property="eno"/>
  	<result column="STATUS" property="status"/>
  	<result column="PROFILE_IMG" property="profileImg"/>
  	<result column="STATUS_TYPE" property="statusType"/> 	
  	<result column="USER_PWD" property="userPwd"/>
  	<result column="USER_NAME" property="userName"/> 	
  	<result column="PHONE" property="phone"/> 	
  	<result column="EXTENSION" property="extension"/> 	
  	<result column="EMAIL" property="email"/> 	
  	<result column="ADDRESS" property="address"/> 	
  	<result column="ANNUAL_LEAVE_COUNT" property="annualLeaveCount"/> 	
  	<result column="HIRE_DATE" property="hireDate"/> 
  	
  	<result column="P_NAME" property="pName"/> 
  	<result column="DEPT_NAME" property="dName"/> 
  	
</resultMap>


<resultMap type="member" id="memberResultSet">
	<id column="USER_NO" property="userNo" />
	<result column="ENO" property="eno" />
	<result column="STATUS" property="status" />
	<result column="PROFILE_IMG" property="profileImg" />
	<result column="STATUS_TYPE" property="statusType" />
	<result column="USER_PWD" property="userPwd" />
	<result column="USER_NAME" property="userName" />
	<result column="PHONE" property="phone" />
	<result column="EXTENSION" property="extension" />
	<result column="EMAIL" property="email" />
	<result column="ADDRESS" property="address" />
	<result column="ANNUAL_LEAVE_COUNT" property="annualLeaveCount" />
	<result column="HIRE_DATE" property="hireDate" />
</resultMap>

	<!-- [지영] member insert구문 -->
	<!--[지영]1. member insert -->
	<insert id="insertMember" parameterType="member" useGeneratedKeys="true"  >
	
		<selectKey keyProperty="eno" resultType="_int" order="BEFORE">
	 		SELECT CAST(CONCAT(DATE_FORMAT(CURRENT_DATE, '%y'), LPAD(MONTH(CURRENT_DATE), 2, '0'), LPAD(right((SELECT ENO FROM member ORDER BY ENO DESC LIMIT 1), 2)+1, 2, '0' ))as SIGNED)
	 	</selectKey>
	
		INSERT INTO MEMBER(ENO,STATUS_TYPE, USER_PWD, USER_NAME ,PHONE,EXTENSION, EMAIL,ADDRESS, HIRE_DATE)
	   	VALUES(
	   	#{eno},
	   	0,
	   	#{userPwd},
	   	#{userName},
	   	#{phone},
	   	#{extension},
	   	#{email},
	   	#{address},
	   	#{hireDate})
	  		
	</insert>
	
	<!-- [지영] 2.dept insert -->
	<insert id="insertUserDept" parameterType="userDepatment" useGeneratedKeys="true">
		<selectKey keyProperty="userNo" resultType="_int" order="BEFORE">
	 		SELECT USER_NO FROM member ORDER BY USER_NO DESC LIMIT 1
	 	</selectKey>
	 	
	 	INSERT INTO USER_DEPARTMENT(USER_NO,P_CODE, DEPT_CODE)
	   	VALUES(
	   	#{userNo},
	   	#{pCode},
	   	#{deptCode})
	   	
	</insert>
	
	<!--[지영] 3.사용자에게 보여줄 eno select -->
	<select id="selectENO" resultType="_int" >
		SELECT ENO FROM member ORDER BY ENO DESC LIMIT 1
	</select>
	
	<!-- [지영] member select 구문 -->	
	 <select id="selectMember" resultMap="AllmemberResultSet" parameterType="hashMap">
		SELECT USER_NO, ENO, USER_PWD, USER_NAME,PHONE,EXTENSION,EMAIL,ADDRESS,ANNUAL_LEAVE_COUNT,HIRE_DATE,P_NAME,DEPT_NAME
		FROM member
		left JOIN user_department USING(USER_NO)
	    left JOIN department USING(DEPT_CODE)
	    left JOIN position USING(P_CODE)
		WHERE STATUS = #{Sselect}
		    <if test='Dselect != null'>
		      AND DEPT_CODE = #{Dselect}
		    </if>
		    <if test='Pselect != null'>
		      AND P_CODE = #{Pselect}
		    </if>
	 </select>
	 
	 <!-- 페이징용 count 체크 -->
	 	 <select id="selectMemberCount"  resultType="_int" parameterType="hashMap">
		SELECT COUNT(*)
		FROM member
		left JOIN user_department USING(USER_NO)
	    left JOIN department USING(DEPT_CODE)
	    left JOIN position USING(P_CODE)
		WHERE STATUS = #{Sselect}
		    <if test='Dselect != null'>
		      AND DEPT_CODE = #{Dselect}
		    </if>
		    <if test='Pselect != null'>
		      AND P_CODE = #{Pselect}
		    </if>
	 </select>
	 
	 <!-- [지영] 사용자 수정용 조회 -->
	 <select id="selectMemberOne" parameterType="_int" resultType="member">
	 	SELECT *
		FROM MEMBER
		WHERE USER_NO = #{userNo}
	 </select>
	

	<!-- [지의] - 로그인유저 -->
	<select id="loginMember" parameterType="member" resultMap="memberResultSet">
		SELECT *
		  FROM MEMBER
		 WHERE ENO = #{eno}
		   AND STATUS = 'Y'
	</select>
	
	<!-- [지의] - 비밀번호 변경 -->
	<update id="updatePwd" parameterType="member">
		UPDATE MEMBER
		   SET USER_PWD = #{userPwd}
		 WHERE ENO = #{eno}
	</update>




</mapper>
