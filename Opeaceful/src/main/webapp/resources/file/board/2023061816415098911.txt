1. Spring MVC Framework로 개발한 애플리케이션의 실행 흐름을 서술하시오

요청(request) -> Filter -> DispatcherServlet(HandlerMapping) -> Interceptor -> Controller -> AOP -> Service -> Dao -> DB
 -> Dao -> Service -> AOP -> Controller -> Interceptor -> DispatcherServlet(ViewResolver) -> Filter -> 응답
=================================================================
2. spring의 특징 중 Spring MVC에 대해 서술하시오. [0]

- Model, View, Controller 사이의 의존 관계를 DI 컨테이너에서 
개발자가 아닌 서버가 객체들을 관리하는 웹 애플리케이션 구축하는 것을 의미
=================================================================
3. Servlet을 이용한 웹 프로젝트에서 Mybatis를 사용하기 위한 순서를 기술하시오.
   1. SqlSessionFactoryBuilder 객체 생성
    2. mybatis-config.xml 파일을 읽어들여서 SqlSessionFactory 객체 생성
    3. sqlSession 객체 생성 및 트랜잭션 처리를 자동으로 할지 수동으로 할지를 매개변수를 통해 구분(false : 수동 , true : 자동)

4. InternalResourceViewResolver란?
- 컨트롤러가 지정한 뷰 이름으로부터 실제로 사용될 뷰를 선택하는데, 이 때 컨트롤러가 지정한 뷰 이름 앞뒤로
prifix 프로퍼티와 suffix 프로퍼티를 추가한 값이 실제로 사용될 자원의 경로가 된다.
=================================================================
5. DI에 대하여 서술하시오 [0]

의존성 주입,
설정 파일이나 어노테이션을 통해 객체를 스프링 컨테이너로부터 주입을 받는 개념
컨테이너가 빈의 설정 정보를 읽어와 자동으로 해당 객체에 연결하는 것을 의미

이렇게 의존성을 주입 받게 되면 이후 해당 객체를 수정해야 할 상황이
생겼을 때 소스 코드의 수정을 최소화 할 수 있음
=================================================================
6. 스프링의 특징(DI, AOP, IoC) [0]

스프링은 ioc구조를 통해 구동시 필요한 객체에 대한 관리를 개발자가
아닌 컨테이너(bean Factory)에게 의존성 주입(DI)을 통해 맡김으로써 소스코드 구현시간을 단축할 수 있다.
또한 AOP를 통해 여러계층에서 공통으로 필요로 하는 트랜잭션처리, 로깅처리 등의 기능들을 따로 분리하여 
더 세밀하게 조정할 수 있다.
---------------------------------------------------------------------------------------------------------------
(DI : new연산자를 쓰지 않고 필드 선언만 한 후@Autowried라는 어노테이션을 붙여서 
내가 필요로 하는 객체를 스프링 컨테이너로부터 주입받는 것)

이렇게 의존성을 주입 받게 되면 이후 해당 객체를 수정해야 할 상황이
생겼을 때 소스 코드의 수정을 최소화 할 수 있음
==================================================================
7. IoC에 대하여 서술하시오[0]

프로그램을 구동하는데 필요한 객체에 대한 관리(생성,소멸)를 프로그램을 
개발하는 사람이 아닌 프로그램을 구동하는 컨테이너에서 직접 관리하는 것을 말함
==================================================================
8. Maven? [0]

자바용 프로젝트 관리 도구,  pom.xml문서를 통해
해당 프로젝트의 버전 정보 및 라이브러리 정보들을 통합하여
관리하는 프레임워크
==================================================================
9. pom.xml파일 안에 기술되어있는 <repository>, <dependency>? [0]

repository : 기본저장소(메이븐 레파지토리)에서 다운받지 못하는 경우, 
직접 다운받고자하는 저장소를 등록하는 태그
dependency : 프로젝트에서 사용할 라이브러리를 담는 태그
( 라이브러리 의존성 주입 )
===============================================
10. DispatcherServlet에 대하여 서술하시오  [0]

모든 요청을 가장 먼저 앞에서 받아들여서 알맞은 controller로 연결을 해주고
controller의 반환 결과에 따라서 알맞은 view를 선택해 클라이언트에게 응답하는 역할
===============================================
11. AOP에 대하여 서술하시오 [0]

  - AOP는 주로 트랜잭션처리(@Transactional), 로깅처리 등 비지니스단의 메서드에서 
더 "세밀하게" 조정하고 싶을 때 사용하면 됨
Interceptor 보다 더 세밀하게 관리할 수 있음

트랜잭션, 로깅, 보안 등 여러 모듈, 여러 계층에서 공통으로
필요로 하는 기능의 경우 해당 기능들을 분리하여 관리하는 것
=================================================================
12. ModelAndView ? [0]

컨트롤러가 처리한 결과 정보 및 뷰 선택에 필요한 정보를 담음
ModelAndView에서 Model은 데이터를 key-value담을 수 있는 Model객체를 의미함
Model + View가 결합된 형태의 객체 Model객체는 단독사용이 가능하지만, View는 불가능함.
===================================
포트폴리오
프젝 만들어서 특정 URL호출시 화면이 뜨게 하면 됨