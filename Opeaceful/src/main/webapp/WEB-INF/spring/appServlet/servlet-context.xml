<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.company.opeaceful" />
	
	<!-- 
		트랜잭션 처리시 필요한 @Transactional 어노테이션 활성화 시키기 
	 	@Transactional : 클래스 혹은 메소드 수행후에 트랜잭션을 처리하라고 알려주는 어노테이션
	 -->
	 <tx:annotation-driven transaction-manager="transactionManager"/>
	 
<!-- 	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
				<beans:bean class="com.company.opeaceful.member"/>
		</mvc:interceptor>
	</mvc:interceptors> -->
	
		<!-- webSocket 요청시 핸들러 클래스와 연결하기 -->
 	<beans:bean id="chatHandler" class="com.company.opeaceful.chat.model.websocket.ChatWebsocketHandler"/> 
 	
 		<!-- (승은) 전자결재 알림용 웹소켓 -->
	<beans:bean id="aprHandler"
		class="com.company.opeaceful.approval.model.websocket.AprWebsocketHandler" />
	 
	 <websocket:handlers>
	 	<!-- 웹 소켓에 대한 요청이 들어왔을때 요청주소를 처리할 bean객체 지정 -->
	 	<websocket:mapping handler="chatHandler" path="/chat/webSocket"/>
	 	
	 			<!-- 웹 소켓에 대한 요청이 들어왔을때 요청주소를 처리할 bean객체 지정 -->
		<websocket:mapping handler="aprHandler" path="/approval/webSocket" />
			
	 	
	 	<websocket:handshake-interceptors>
	 		<!-- 
	 			interceptor : http통신에서 request와 response를 가로채는 역할
	 			
	 			handshake-interceptores : 
	 				요청관련 데이터중 httpSession 정보를 가로채서 webSocketSession에게 넣어줌
	 		 -->
	 		 <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
	 	</websocket:handshake-interceptors>
	 	
	 	<!-- SocketJS라이브러리를 이용해서 만들어진 웹소켓 객체임을 의미한다 -->
	 	<websocket:sockjs/>
	 </websocket:handlers>
	
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
				<beans:bean class="com.company.opeaceful.commom.interceptor.BoardTypeInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

</beans:beans>
